---
- hosts: all
  gather_facts: False

# start by installing required packages (note that postgresql packages
# installed separately in postgresql role and apache packages installed
# in apache role)

  pre_tasks:
    - name: Install packages
      become: true
      apt: name={{ item }} state=present
      with_items:
        - virtualenv
        - libpq-dev
        - git-core
        - build-essential
        - python-psycopg2
        - python-dev
        - python-pyramid


    - name: Add user "opentree"
      user:
        name: opentree
        shell: /bin/bash       # Defaults to /bin/bash
        state: present
      become: true

# This is only needed for otindex, it's up here so that it fails faster
    - name: Install pyscopg venv
      pip:
        virtualenv: "{{ install_dir }}/../venv"
        virtualenv_python: python3
        name: psycopg2
      become: yes
      become_user: opentree

    - name: Create Folder
      file: 
          path: /home/opentree/.ssh
          state: directory
          mode: 0700
          group: opentree
          owner: opentree
      become: true
      become_user: opentree

    - name: Create log file dir
      file: 
        path: "{{ otindex_logfile_dir }}"
        state: directory
        force: no
        mode: 0775
        group: opentree
        owner: opentree
      become: yes

    - name: example copying file with owner and permissions
      copy:
        remote_src: yes
        src:  /home/admin/.ssh/authorized_keys
        dest: /home/opentree/.ssh/authorized_keys
        owner: opentree
        group: opentree
        mode: 0644
      become: true


  roles:
    - postgresql
    - peyotl
    - otindex
    - otdata
    - {role: 'apache', tags: 'apache'}



  # set this at play level because used in multiple roles: peyotl and otindex
  # This was not working as hoped...
#  environment:
#      PEYOTL_CONFIG_FILE: "{{ peyotl_config_location }}/config"

  handlers:
      - name: restart apache
        become: true
        service: name=apache2 state=restarted

      - name: restart postgresql
        service: name=postgresql state=restarted
